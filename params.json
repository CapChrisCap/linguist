{"name":"Linguist","tagline":"Language Savant, Python clone of github/linguist.","body":"Linguist\r\n========\r\n\r\nLanguage Savant, Python clone of [github/linguist](https://github.com/github/linguist/).\r\n\r\n## Installation\r\n\r\nPIP\r\n```bash\r\npip install linguist\r\n```\r\n\r\nEasy_install\r\n```bash\r\neasy_install linguist\r\n```\r\n\r\n## Features\r\n\r\n#### Language detection\r\n\r\nLinguist defines the list of all languages known to GitHub in a [yaml file](https://github.com/liluo/linguist/blob/master/linguist/libs/languages.yml). In order for a file to be highlighted, a language and lexer must be defined there.\r\n\r\nMost languages are detected by their file extension. This is the fastest and most common situation.\r\n\r\nFor disambiguating between files with common extensions, we use a [Bayesian classifier](https://github.com/liluo/linguist/blob/master/linguist/libs/classifier.py). For an example, this helps us tell the difference between `.h` files which could be either C, C++, or Obj-C.\r\n\r\nFor testing, there is a simple FileBlob API:\r\n\r\n```python\r\nfrom linguist.libs.file_blob import FileBlob\r\n\r\nFileBlob('test.py').language.name #=> 'Python'\r\n\r\nFileBlob('test_file').language.name #=> 'Python'\r\n```\r\n\r\nSee [linguist/libs/language.py](https://github.com/liluo/linguist/blob/master/linguist/libs/language.py) and [lib/linguist/languages.yml](https://github.com/liluo/linguist/blob/master/linguist/libs/languages.yml).\r\n\r\n\r\n#### Syntax Highlighting\r\n\r\nThe actual syntax highlighting is handled by our Pygments wrapper, [pygments](https://bitbucket.org/birkenfeld/pygments-main). It also provides a Lexer abstraction that determines which highlighter should be used on a file.\r\n\r\nWe typically run on a pre-release version of Pygments, pygments.rb, to get early access to new lexers. The languages.yml file is a dump of the lexers we have available on our server.\r\n\r\n#### Stats\r\n\r\nThe Language Graph you see on every repository is built by aggregating the languages of all repo's blobs.\r\n\r\nThe repository stats API can be used on a directory:\r\n\r\n```python\r\nfrom linguist.libs.repository import Repository\r\n\r\nproject = Repository.from_directory(\".\")\r\n\r\nproject.language.name #=> 'Python'\r\n\r\nproject.languages #=> defaultdict(<type 'int'>, {<Language name:Python>: 53446, <Language name:JavaScript>: 1991})\r\n\r\nfor lang, count in projects.iteritems():\r\n    print lang.name, count\r\n#=> Python, 53446\r\n#=> JavaScript, 1991\r\n```\r\n\r\n#### Todo\r\n\r\nThese stats are also printed out by the binary. Try running `linguist` on itself.\r\n\r\n#### Ignore vendored files\r\n\r\nChecking other code into your git repo is a common practice. But this often inflates your project's language stats and may even cause your project to be labeled as another language. We are able to identify some of these files and directories and exclude them.\r\n\r\n```python\r\nfrom linguist.libs.file_blob import FileBlob\r\n\r\nFileBlob('static/js/jquery-2.0.0.min.js').is_vendored #=> True\r\n```\r\n\r\nSee [BlobHelper#is_vendored](https://github.com/liluo/linguist/blob/master/linguist/libs/blob_helper.py#L279) and [linguist/libs/vendor.yml](https://github.com/liluo/linguist/blob/master/linguist/libs/vendor.yml).\r\n\r\n#### Generated file detection\r\n\r\n```python\r\nfrom linguist.libs.file_blob import FileBlob\r\n\r\nFileBlob('jquery-2.0.0.min.js').is_generated #=> True\r\nFileBlob('app.coffee').is_generated #=> True\r\n```\r\n\r\nSee [Generated#is_generated](https://github.com/liluo/linguist/blob/master/linguist/libs/generated.py).\r\n\r\n\r\n## Contributing\r\n\r\n```bash\r\n* Fork the repository.\r\n* Create a topic branch.\r\n* Implement your feature or bug fix.\r\n* Add, commit, and push your changes.\r\n* Submit a pull request.\r\n```\r\n\r\n#### Testing\r\n\r\n```bash\r\ncd tests/\r\npython run.py\r\n```\r\n\r\n## Changelog\r\n\r\n__v0.0.1 [2013-04-22]__\r\n* Release v0.0.1\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}